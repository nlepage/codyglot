// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.proto

/*
Package router is a generated protocol buffer package.

It is generated from these files:
	router.proto

It has these top-level messages:
	ExecuteRequest
	ExecuteResponse
*/
package router

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ExecuteRequest struct {
	Language string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	StdIn    []byte `protobuf:"bytes,3,opt,name=stdIn,proto3" json:"stdIn,omitempty"`
}

func (m *ExecuteRequest) Reset()                    { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()               {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ExecuteRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ExecuteRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ExecuteRequest) GetStdIn() []byte {
	if m != nil {
		return m.StdIn
	}
	return nil
}

type ExecuteResponse struct {
	ExitCode uint32 `protobuf:"varint,1,opt,name=exitCode" json:"exitCode,omitempty"`
	StdOut   []byte `protobuf:"bytes,2,opt,name=stdOut,proto3" json:"stdOut,omitempty"`
	StdErr   []byte `protobuf:"bytes,3,opt,name=stdErr,proto3" json:"stdErr,omitempty"`
}

func (m *ExecuteResponse) Reset()                    { *m = ExecuteResponse{} }
func (m *ExecuteResponse) String() string            { return proto.CompactTextString(m) }
func (*ExecuteResponse) ProtoMessage()               {}
func (*ExecuteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExecuteResponse) GetExitCode() uint32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *ExecuteResponse) GetStdOut() []byte {
	if m != nil {
		return m.StdOut
	}
	return nil
}

func (m *ExecuteResponse) GetStdErr() []byte {
	if m != nil {
		return m.StdErr
	}
	return nil
}

func init() {
	proto.RegisterType((*ExecuteRequest)(nil), "com.github.zenika.codyglot.router.ExecuteRequest")
	proto.RegisterType((*ExecuteResponse)(nil), "com.github.zenika.codyglot.router.ExecuteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Router service

type RouterClient interface {
	Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error)
}

type routerClient struct {
	cc *grpc.ClientConn
}

func NewRouterClient(cc *grpc.ClientConn) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error) {
	out := new(ExecuteResponse)
	err := grpc.Invoke(ctx, "/com.github.zenika.codyglot.router.Router/execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Router service

type RouterServer interface {
	Execute(context.Context, *ExecuteRequest) (*ExecuteResponse, error)
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.zenika.codyglot.router.Router/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).Execute(ctx, req.(*ExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.zenika.codyglot.router.Router",
	HandlerType: (*RouterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "execute",
			Handler:    _Router_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "router.proto",
}

func init() { proto.RegisterFile("router.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x40, 0xad, 0x1f, 0x75, 0x1d, 0xaa, 0xc2, 0x20, 0x52, 0xf6, 0xb4, 0xf6, 0xb4, 0xa7, 0x80,
	0xeb, 0x3f, 0x50, 0xf6, 0xe0, 0x49, 0xc8, 0xc1, 0x83, 0xe0, 0xa1, 0xdb, 0x0e, 0xb5, 0xb8, 0x66,
	0xd6, 0x64, 0x02, 0x55, 0xfc, 0xf1, 0xd2, 0x24, 0x14, 0x3c, 0xc9, 0xde, 0xf2, 0x26, 0xc9, 0x0b,
	0x2f, 0x50, 0x58, 0xf6, 0x42, 0x56, 0xed, 0x2c, 0x0b, 0xe3, 0x4d, 0xc3, 0x1f, 0xaa, 0xeb, 0xe5,
	0xcd, 0x6f, 0xd4, 0x37, 0x99, 0xfe, 0xbd, 0x56, 0x0d, 0xb7, 0x5f, 0xdd, 0x96, 0x45, 0xc5, 0x83,
	0xd5, 0x33, 0x5c, 0xac, 0x07, 0x6a, 0xbc, 0x90, 0xa6, 0x4f, 0x4f, 0x4e, 0x70, 0x0e, 0xb3, 0x6d,
	0x6d, 0x3a, 0x5f, 0x77, 0x54, 0x66, 0x8b, 0x6c, 0x79, 0xa6, 0x27, 0x46, 0x84, 0xe3, 0x86, 0x5b,
	0x2a, 0x0f, 0xc3, 0x3c, 0xac, 0xf1, 0x0a, 0x4e, 0x9c, 0xb4, 0x8f, 0xa6, 0x3c, 0x5a, 0x64, 0xcb,
	0x42, 0x47, 0xa8, 0x5e, 0xe1, 0x72, 0xf2, 0xba, 0x1d, 0x1b, 0x47, 0xa3, 0x98, 0x86, 0x5e, 0x1e,
	0x46, 0xc1, 0x28, 0x3e, 0xd7, 0x13, 0xe3, 0x35, 0xe4, 0x4e, 0xda, 0x27, 0x2f, 0x41, 0x5d, 0xe8,
	0x44, 0x69, 0xbe, 0xb6, 0x36, 0xd9, 0x13, 0xad, 0x7e, 0x20, 0xd7, 0x21, 0x00, 0x2d, 0x9c, 0x52,
	0x7c, 0x08, 0x6f, 0xd5, 0xbf, 0xbd, 0xea, 0x6f, 0xec, 0x7c, 0xb5, 0xcf, 0x95, 0xd8, 0x51, 0x1d,
	0xdc, 0xcf, 0x5e, 0xf2, 0xb8, 0xb7, 0xc9, 0xc3, 0x47, 0xdf, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x67, 0x1d, 0x50, 0x53, 0x78, 0x01, 0x00, 0x00,
}
